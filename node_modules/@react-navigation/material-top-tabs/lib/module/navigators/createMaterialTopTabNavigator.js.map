{"version":3,"names":["createNavigatorFactory","TabRouter","useNavigationBuilder","React","warnOnce","MaterialTopTabView","MaterialTopTabNavigator","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","restWithDeprecated","swipeEnabled","lazy","lazyPlaceholder","lazyPreloadDistance","tabBarOptions","rest","defaultScreenOptions","Object","assign","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarPressColor","pressColor","tabBarPressOpacity","pressOpacity","tabBarShowLabel","showLabel","tabBarShowIcon","showIcon","tabBarAllowFontScaling","allowFontScaling","tabBarBounces","bounces","tabBarScrollEnabled","scrollEnabled","tabBarIconStyle","iconStyle","tabBarLabelStyle","labelStyle","tabBarItemStyle","tabStyle","tabBarBadge","renderBadge","tabBarIndicator","renderIndicator","tabBarIndicatorStyle","indicatorStyle","tabBarIndicatorContainerStyle","indicatorContainerStyle","tabBarContentContainerStyle","contentContainerStyle","tabBarStyle","style","keys","forEach","key","undefined","JSON","stringify","deprecatedProps","entries","propName","propValue","toLowerCase","state","descriptors","navigation","NavigationContent"],"sources":["createMaterialTopTabNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationEventMap,\n  MaterialTopTabNavigationOptions,\n} from '../types';\nimport MaterialTopTabView from '../views/MaterialTopTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialTopTabNavigationConfig;\n\nfunction MaterialTopTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...restWithDeprecated\n}: Props) {\n  const {\n    // @ts-expect-error: swipeEnabled is deprecated\n    swipeEnabled,\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: lazyPlaceholder is deprecated\n    lazyPlaceholder,\n    // @ts-expect-error: lazyPreloadDistance is deprecated\n    lazyPreloadDistance,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n\n  let defaultScreenOptions: MaterialTopTabNavigationOptions = {};\n\n  if (tabBarOptions) {\n    Object.assign(defaultScreenOptions, {\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarPressColor: tabBarOptions.pressColor,\n      tabBarPressOpacity: tabBarOptions.pressOpacity,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarShowIcon: tabBarOptions.showIcon,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarBounces: tabBarOptions.bounces,\n      tabBarScrollEnabled: tabBarOptions.scrollEnabled,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarBadge: tabBarOptions.renderBadge,\n      tabBarIndicator: tabBarOptions.renderIndicator,\n      tabBarIndicatorStyle: tabBarOptions.indicatorStyle,\n      tabBarIndicatorContainerStyle: tabBarOptions.indicatorContainerStyle,\n      tabBarContentContainerStyle: tabBarOptions.contentContainerStyle,\n      tabBarStyle: tabBarOptions.style,\n    });\n\n    (\n      Object.keys(\n        defaultScreenOptions\n      ) as (keyof MaterialTopTabNavigationOptions)[]\n    ).forEach((key) => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n\n    warnOnce(\n      tabBarOptions,\n      `Material Top Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#options for more details.`\n    );\n  }\n\n  const deprecatedProps = {\n    swipeEnabled,\n    lazy,\n    lazyPlaceholder,\n    lazyPreloadDistance,\n  } as const;\n\n  Object.entries(deprecatedProps).forEach(([propName, propValue]) => {\n    if (propValue !== undefined) {\n      // @ts-expect-error: Object.entries doesn't return strict types\n      defaultScreenOptions[propName] = propValue;\n\n      warnOnce(\n        true,\n        `Material Top Tab Navigator: '${propName}' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/material-top-tab-navigator#${propName.toLowerCase()} for more details.`\n      );\n    }\n  });\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialTopTabNavigationOptions,\n      MaterialTopTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialTopTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialTopTabNavigationOptions,\n  MaterialTopTabNavigationEventMap,\n  typeof MaterialTopTabNavigator\n>(MaterialTopTabNavigator);\n"],"mappings":"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"}